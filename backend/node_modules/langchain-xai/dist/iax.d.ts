import { RunnableConfig, RunnableBatchOptions } from "@langchain/core/runnables";
import { BaseMessage } from "@langchain/core/messages";
import { IterableReadableStream } from "@langchain/core/utils/stream";
export interface ChatGrokCallOptions extends RunnableConfig {
    temperature?: number;
    maxTokens?: number;
}
export declare class ChatGrok implements Record<string, unknown> {
    [key: string]: unknown;
    private apiKey;
    private model;
    private temperature;
    private maxTokens;
    constructor(options: {
        apiKey: string;
        model?: string;
        temperature?: number;
        maxTokens?: number;
    });
    invoke(input: string | BaseMessage, options?: ChatGrokCallOptions): Promise<string>;
    batch(inputs: (string | BaseMessage)[], options?: ChatGrokCallOptions, batchOptions?: RunnableBatchOptions): Promise<string[]>;
    stream(input: string | BaseMessage, options?: ChatGrokCallOptions): Promise<IterableReadableStream<string>>;
}
